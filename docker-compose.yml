version: '3.5'
services:
  ztncui:
    image: keynetworks/ztncui
    container_name: ztncui
    restart: unless-stopped
    ports:
      - 9993:9993
      - 9993:9993/udp
      - 3443:3443
    volumes:
      - ./storage/zerotier:/var/lib/zerotier-one
      - ./storage/ztncui:/opt/key-networks/ztncui/etc
    environment:
      - ENDPOINT=${ZTNCUI_ENDPOINT:-localhost/9993}
      - HTTPS_PORT=3443
      - HTTP_ALL_INTERFACES=yes
      - ZTNCUI_PASSWD=${ZTNCUI_PASSWORD:-ztncui}
    profiles:
      - vpn

  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
    volumes:
      - ${JELLYFIN_CONFIG:-./configs/jellyfin}:/config
      - ${JELLYFIN_MEDIA:-./storage/media}:/media
    ports:
      - 8096:8096
    restart: unless-stopped
    profiles:
      - jellyfin
      - media

  postgres:
    image: postgres:16
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-labry}
      POSTGRES_USER: ${POSTGRES_USER:-labry}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-labry}
    volumes:
      - ../configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${POSTGRES_DATA:-./storage/postgres}:/var/lib/postgresql/data
    ports:
      - 5432:5432
    profiles:
      - db
      - database
      - postgres

  gogs:
    image: gogs/gogs
    ports:
      - 2222:22
      - 3000:3000
    volumes:
      - ${GOGS_DATA:-./storage/gogs}:/data
    labels:
      - traefik.http.routers.gogs.rule=Host(`gogs.${DOMAIN_NAME}`)
    profiles:
      - git
      - gogs

  jupyter:
    image: jupyterhub/jupyterhub
    container_name: jupyter
    ports:
      - 15751:8000
      - 15752:8081
    profiles:
      - jupyter
      - notebook
    labels:
      - traefik.http.routers.jupyter.rule=Host(`jupyter.${DOMAIN_NAME}`)

  spdf:
    image: frooodle/s-pdf:latest
    container_name: spdf
    ports:
      - 12621:8080
    volumes:
      - ./storage/spdf:/usr/share/tesseract-ocr/5/tessdata
      - ./configs/spdf:/configs
    profiles:
      - spdf
      - pdf
    environment:
      - DOCKER_ENABLE_SECURITY=false

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker"
      # - "--roviders.docker.defaultRule=Host(`whoami.localhost`)"
      # - "--providers.docker.exposedbydefault=false"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      # - ./configs/traefik:/etc/traefik
      # - ./storage/logs/traefik:/log
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.http.routers.api.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.api.service=api@internal
      # - traefik.http.routers.api.tls=true
      # - traefik.http.routers.api.tls.certResolver=labry

  whoami:
    image: containous/whoami
    container_name: whoami
    labels:
      - traefik.httplabry.site.routers.whoami.rule=Host(`whoami.${DOMAIN_NAME}`)
    profiles:
      - whoami

networks:
  labry:
  traefik:
